# Generated by Django 5.2.4 on 2025-08-22 12:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LexiconProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_name",
                    models.CharField(max_length=45, verbose_name="Language name"),
                ),
                (
                    "language_code",
                    models.CharField(
                        max_length=4,
                        unique=True,
                        verbose_name="3 Digit ethnologue language code",
                    ),
                ),
                (
                    "secondary_language",
                    models.CharField(
                        blank=True,
                        help_text="An optional 2nd language, Tok Pisin for PNG langages",
                        max_length=45,
                        null=True,
                    ),
                ),
                ("version", models.IntegerField(default=0, verbose_name="version")),
                (
                    "text_validator",
                    models.CharField(
                        blank=True,
                        help_text="An optional regex to represent which characters are allowed in language entries. If set entries can only be saved if they only contain these characters. [abc] for example only allows the characters a, b and c.",
                        max_length=60,
                        null=True,
                        verbose_name="Regex language text validator",
                    ),
                ),
                (
                    "affix_file",
                    models.TextField(
                        default="# Hunspell affix file for LANGUAGE by NTMPNG\nSET UTF-8\nTRY aeiouAEIOUpbtdkgjmnfsvhlrwyPBTDKGJMNFSVHLRWY\nWORDCHARS -\n\nNOSUGGEST !",
                        help_text="See https://www.systutorials.com/docs/linux/man/4-hunspell/",
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("edit_lexiconproject", "Can edit this lexicon project")
                ],
            },
        ),
        migrations.CreateModel(
            name="Affix",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the affix", max_length=40),
                ),
                (
                    "applies_to",
                    models.CharField(
                        choices=[
                            ("n", "noun"),
                            ("pn", "proper noun"),
                            ("adj", "adjective"),
                            ("v", "verb"),
                            ("adv", "adverb"),
                            ("com", "compound verb"),
                            ("prn", "pronoun"),
                            ("rel", "relator/preposition"),
                            ("ph", "phrase"),
                            ("uk", "uknown"),
                        ],
                        help_text="Part of speech this affix is for (e.g., verb, noun)",
                        max_length=5,
                    ),
                ),
                (
                    "affix_letter",
                    models.CharField(
                        choices=[
                            ("A", "A"),
                            ("B", "B"),
                            ("C", "C"),
                            ("D", "D"),
                            ("E", "E"),
                            ("F", "F"),
                            ("G", "G"),
                            ("H", "H"),
                            ("I", "I"),
                            ("J", "J"),
                            ("K", "K"),
                            ("L", "L"),
                            ("M", "M"),
                            ("N", "N"),
                            ("O", "O"),
                            ("P", "P"),
                            ("Q", "Q"),
                            ("R", "R"),
                            ("S", "S"),
                            ("T", "T"),
                            ("U", "U"),
                            ("V", "V"),
                            ("W", "W"),
                            ("X", "X"),
                            ("Y", "Y"),
                            ("Z", "Z"),
                        ],
                        help_text="Single letter representing the affix.",
                        max_length=1,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="affixes",
                        to="lexicon.lexiconproject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Paradigm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40)),
                (
                    "part_of_speech",
                    models.CharField(
                        choices=[
                            ("n", "noun"),
                            ("pn", "proper noun"),
                            ("adj", "adjective"),
                            ("v", "verb"),
                            ("adv", "adverb"),
                            ("com", "compound verb"),
                            ("prn", "pronoun"),
                            ("rel", "relator/preposition"),
                            ("ph", "phrase"),
                            ("uk", "uknown"),
                        ],
                        help_text="Part of speech this paradigm is for (e.g., verb, noun)",
                        max_length=5,
                    ),
                ),
                (
                    "row_labels",
                    models.JSONField(
                        help_text="List of row labels for the paradigm grid"
                    ),
                ),
                (
                    "column_labels",
                    models.JSONField(
                        help_text="List of column labels for the paradigm grid"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lexicon.lexiconproject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LexiconEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        help_text="The lexicon entry text for the entry, in the language of the project.",
                        max_length=60,
                        verbose_name="Language text",
                    ),
                ),
                (
                    "search",
                    models.TextField(
                        blank=True,
                        help_text="automatically generated search terms",
                        null=True,
                    ),
                ),
                (
                    "comments",
                    models.TextField(
                        blank=True,
                        help_text="extra comments or an extended definition information",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "review",
                    models.CharField(
                        choices=[
                            ("0", "No review"),
                            ("1", "Review now"),
                            ("2", "Review after literacy"),
                        ],
                        default="0",
                        help_text="Should this word be marked for review?",
                        max_length=1,
                    ),
                ),
                ("review_comments", models.TextField(blank=True, null=True)),
                (
                    "review_user",
                    models.CharField(
                        blank=True, editable=False, max_length=45, null=True
                    ),
                ),
                ("review_time", models.DateField(editable=False, null=True)),
                ("created", models.DateField(auto_now_add=True)),
                ("modified", models.DateField(auto_now=True)),
                (
                    "modified_by",
                    models.CharField(
                        blank=True, editable=False, max_length=45, null=True
                    ),
                ),
                (
                    "pos",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("n", "noun"),
                            ("pn", "proper noun"),
                            ("adj", "adjective"),
                            ("v", "verb"),
                            ("adv", "adverb"),
                            ("com", "compound verb"),
                            ("prn", "pronoun"),
                            ("rel", "relator/preposition"),
                            ("ph", "phrase"),
                            ("uk", "uknown"),
                        ],
                        max_length=5,
                        null=True,
                        verbose_name="part of speech",
                    ),
                ),
                ("checked", models.BooleanField(default=False)),
                (
                    "affixes",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Affixes that can be used with this entry.",
                        related_name="entries",
                        to="lexicon.affix",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="lexicon.lexiconproject",
                    ),
                ),
                (
                    "paradigms",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Paradigms that this word can use for conjugation/declension",
                        to="lexicon.paradigm",
                    ),
                ),
            ],
            options={
                "ordering": ["text"],
            },
        ),
        migrations.CreateModel(
            name="Conjugation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "row",
                    models.IntegerField(
                        help_text="The row index in the paradigm grid."
                    ),
                ),
                (
                    "column",
                    models.IntegerField(
                        help_text="The column index in the paradigm grid."
                    ),
                ),
                (
                    "conjugation",
                    models.CharField(
                        blank=True,
                        help_text="The actual conjugated form of the word.",
                        max_length=40,
                    ),
                ),
                (
                    "word",
                    models.ForeignKey(
                        help_text="The word that this conjugation belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conjugations",
                        to="lexicon.lexiconentry",
                    ),
                ),
                (
                    "paradigm",
                    models.ForeignKey(
                        help_text="The paradigm that defines the conjugation structure.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lexicon.paradigm",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conjugation",
                "verbose_name_plural": "Conjugations",
            },
        ),
        migrations.CreateModel(
            name="Sense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eng",
                    models.CharField(
                        help_text="English translation for this sense.",
                        max_length=60,
                        verbose_name="English",
                    ),
                ),
                (
                    "oth_lang",
                    models.CharField(
                        blank=True,
                        help_text="Translation in project 2nd language for this sense.",
                        max_length=60,
                        null=True,
                        verbose_name="Other language",
                    ),
                ),
                (
                    "example",
                    models.TextField(
                        blank=True, help_text="Example sentence or usage.", null=True
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=1, help_text="Senses with lower numbers appear first."
                    ),
                ),
                (
                    "entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="senses",
                        to="lexicon.lexiconentry",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Variation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("spelling", "Spelling Variant"),
                            ("dialect", "Dialectal Variant"),
                            ("abbrv", "Abbreviation"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        help_text="write the variation here",
                        max_length=100,
                        verbose_name="variation",
                    ),
                ),
                (
                    "included_in_spellcheck",
                    models.BooleanField(
                        default=False,
                        help_text="Should word be marked in spellcheck as acceptable?",
                    ),
                ),
                (
                    "included_in_search",
                    models.BooleanField(
                        default=False, help_text="Should word appear in search results?"
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "word",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variations",
                        to="lexicon.lexiconentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IgnoreWord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        help_text="Word to add to spell check.", max_length=60
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("tpi", "Tok Pisin"),
                            ("pn", "Proper noun"),
                            ("eng", "English"),
                            ("fgn", "Foreign transliterated"),
                        ],
                        help_text="Type of word to add to spell check.",
                        max_length=3,
                    ),
                ),
                (
                    "eng",
                    models.CharField(
                        help_text="English", max_length=60, verbose_name="English"
                    ),
                ),
                (
                    "comments",
                    models.TextField(
                        blank=True,
                        help_text="extra comments or an extended definition information",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ignore_word_project",
                        to="lexicon.lexiconproject",
                    ),
                ),
            ],
            options={
                "ordering": ["text"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("project", "text"),
                        name="ignore_word_unique_text_per_project",
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="affix",
            constraint=models.UniqueConstraint(
                fields=("project", "affix_letter"),
                name="unique_affix_letter_per_project",
            ),
        ),
        migrations.AddConstraint(
            model_name="paradigm",
            constraint=models.UniqueConstraint(
                fields=("project", "name"), name="unique_paradigm_name_per_project"
            ),
        ),
        migrations.AddIndex(
            model_name="lexiconentry",
            index=models.Index(fields=["search"], name="lexicon_lex_search_34e5fe_idx"),
        ),
        migrations.AddConstraint(
            model_name="lexiconentry",
            constraint=models.UniqueConstraint(
                fields=("project", "text"), name="unique_text_per_project"
            ),
        ),
        migrations.AddConstraint(
            model_name="conjugation",
            constraint=models.UniqueConstraint(
                fields=("word", "paradigm", "row", "column"),
                name="unique_conjugation_position",
            ),
        ),
    ]
